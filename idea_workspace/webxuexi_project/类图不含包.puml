@startuml
interface DeptMapper {
~ List<Dept> list()
~ void deleteById(Integer)
~ void insert(Dept)
~ Dept queryById(Integer)
~ void modifyById(Dept)
}
class AliOSSUtils {
- String endpoint
- String accessKeyId
- String accessKeySecret
- String bucketName
+ String upload(MultipartFile)
}
class JwtUtils {
- {static} String signKey
- {static} Long expire
+ {static} String generateJwt(Map<String,Object>)
+ {static} Claims parseJWT(String)
}
class EmpServiceImpl {
~ EmpMapper empmapper
+ PageBean page(Integer,Integer,String,Short,LocalDate,LocalDate)
+ void deleteByIds(List<Integer>)
+ void addEmp(Emp)
+ Emp getById(Integer)
+ void modifyById(Emp)
+ Emp login(Emp)
}

class WebConfig {
- LoginCheckinterceptor loginCheckinterceptor
+ void addInterceptors(InterceptorRegistry)
}
class SpringbootTliasApplication {
+ {static} void main(String[])
}
class UploadController {
~ AliOSSUtils aliOSSUtils
+ Result upload(MultipartFile)
}
class LoginCheckinterceptor {
+ boolean preHandle(HttpServletRequest,HttpServletResponse,Object)
+ void postHandle(HttpServletRequest,HttpServletResponse,Object,ModelAndView)
+ void afterCompletion(HttpServletRequest,HttpServletResponse,Object,Exception)
}
class SpringbootTliasApplicationTests {
~ void contextLoads()
+ void testSetJWT()
+ void testJieXiJWT()
}
class DeptServiceImpl {
- DeptMapper deptMapper
- EmpMapper empMapper
+ List<Dept> list()
+ void delete(Integer)
+ void add(Dept)
+ Dept queryById(Integer)
+ void modifyById(Dept)
}
class Demo {
+ {static} void main(String[])
}
class EmpController {
- EmpService empService
+ Result page(Integer,Integer,String,Short,LocalDate,LocalDate)
+ Result deleteByIds(List<Integer>)
+ Result addEmp(Emp)
+ Result getById(Integer)
+ Result modifyById(Emp)
}
class DeptController {
- DeptService deptService
+ Result list()
+ Result delete(Integer)
+ Result add(Dept)
+ Result queryById(Integer)
+ Result modifyById(Dept)
}
class LoginController {
- EmpService empService
+ Result login(Emp)
}
class Dept {
- Integer id
- String name
- LocalDateTime createTime
- LocalDateTime updateTime
}
interface DeptService {
~ List<Dept> list()
~ void delete(Integer)
~ void add(Dept)
~ Dept queryById(Integer)
~ void modifyById(Dept)
}
interface EmpService {
~ PageBean page(Integer,Integer,String,Short,LocalDate,LocalDate)
~ void deleteByIds(List<Integer>)
~ void addEmp(Emp)
~ Emp getById(Integer)
~ void modifyById(Emp)
~ Emp login(Emp)
}
class GlobalExceptionHandler {
+ Result exception(Exception)
}
class Result {
- Integer code
- String msg
- Object data
+ {static} Result success()
+ {static} Result success(Object)
+ {static} Result error(String)
}
class Emp {
- Integer id
- String username
- String password
- String name
- Short gender
- String image
- Short job
- LocalDate entrydate
- Integer deptId
- LocalDateTime createTime
- LocalDateTime updateTime
}
class PageBean {
- long total
- List rows
}
interface EmpMapper {
+ List<Emp> list(String,Short,LocalDate,LocalDate)
~ void deleteByIds(List<Integer>)
~ void addEmp(Emp)
~ Emp getById(Integer)
~ void modifyById(Emp)
~ Emp quaryByUsernameAndPassword(Emp)
~ void deleteByDeptId(Integer)
}


EmpService <|.. EmpServiceImpl
WebMvcConfigurer <|.. WebConfig
HandlerInterceptor <|.. LoginCheckinterceptor
DeptService <|.. DeptServiceImpl
@enduml